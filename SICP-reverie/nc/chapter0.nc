
Lisp 不如 Fortran 发明得早. Scheme 更接近 Algol 60 而不是早期的 Lisp.
Algol 60 的基因还在 Scheme 和 Pascal 里, 但两者差异极大.

人工智能邻域之外, 新的问题容易孵化新的语言, 新的语言越来越不基本.
而是逼近系统的边界, 控制和隔离作业模块之间的信息流动,
渐渐逼近与人交互最频繁的地方.
-- bash 就是这样, 终端交互的工具, 而不是一门语言, 设计目标不同
Lisp 语法简单, 无法分析没有任何价值, 减少了程序员的负担

语言不仅是计算机操作的方式, 更是方法学思想的媒介, 程序是为给人阅读

Scheme 的形式化性质一小时能讲完, 很快不用在去关心语法上的事
Scheme 从 Lisp 学会t元语言和语法, 程序与数据统一, 内存回收技术(?)
从 Algol 取了词法作用域和块结构
